{"version":3,"sources":["assests/avatar_img.jpg","assests sync /^/.//.*$","assests/Letter of Recommendation for Jacob Grether.png","assests/background.jpg","assests/locs_1.png","assests/locs_2.png","assests/locs_3.png","assests/locs_4.png","components/Avatar.js","Pages/Home.js","Pages/Hobbies.js","components/ProjectCard.js","data/data.js","Pages/Dev.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Avatar","props","className","src","imgSrc","alt","Home","require","Hobbies","ProjectCard","slideInfo","picture","title","description","onClick","change","index","totalSlides","data","locs","tools","slides","Dev","onClickHandler","direction","state","slideIndex","setState","locsSlide","locsData","this","Component","App","to","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ae3be50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar_img.c88250b0.jpg\";","var map = {\n\t\"./Letter of Recommendation for Jacob Grether.png\": 34,\n\t\"./avatar_img.jpg\": 14,\n\t\"./background.jpg\": 35,\n\t\"./locs_1.png\": 36,\n\t\"./locs_2.png\": 37,\n\t\"./locs_3.png\": 38,\n\t\"./locs_4.png\": 39\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","module.exports = __webpack_public_path__ + \"static/media/Letter of Recommendation for Jacob Grether.4d790467.png\";","module.exports = __webpack_public_path__ + \"static/media/background.432ad85c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/locs_1.84d4a116.png\";","module.exports = __webpack_public_path__ + \"static/media/locs_2.6974c0cf.png\";","module.exports = __webpack_public_path__ + \"static/media/locs_3.f6b3675e.png\";","module.exports = __webpack_public_path__ + \"static/media/locs_4.8e4c7313.png\";","import React from 'react'\nimport './Avatar.css'\n\nconst Avatar = props => {\n  return (\n    <div className='avatar'>\n      <div className='avatar-image'>\n        <img src={props.imgSrc} alt='avatar' />\n      </div>\n\n      <div className='avatar-info'>\n        Jake Grether\n        <br />\n        Computer Science\n        <br />\n        UVU\n        <br />\n        jacob.grether@gmail\n        <br />\n        541.450.1805\n      </div>\n    </div>\n  )\n}\nexport default Avatar\n","import React from 'react'\nimport Avatar from '../components/Avatar'\nimport './Page.css'\nconst Home = () => {\n  return (\n    <div className='container'>\n      <div className='header'>\n        <Avatar\n          className='home-avatar'\n          imgSrc={require('../assests/avatar_img.jpg')}\n        />\n      </div>\n      <div className='content'>\n        <h1 id='welcome' className='content-title'>\n          Hello\n        </h1>\n\n        <p className='content-topic-desc'>\n          My name is Jake Grether. I am a Computer Science major at Utah Valley\n          University where I will graduate in December 2020. I have a passion\n          for creating intuitive user friendly applications, making complex\n          processes simpler, efficient, and more easily maintained.\n        </p>\n        <p className='content-topic-desc'>\n          I've been happily married since June of 2012 to my beautiful wife\n          Misti. I'm a singer song-writer by hobby and love to work with my\n          hands.\n        </p>\n      </div>\n    </div>\n  )\n}\nexport default Home\n","import React from 'react'\n\nconst Hobbies = () => {\n  return <div>Another gay ass div</div>\n}\nexport default Hobbies\n","import React from 'react'\nimport './ProjectCard.css'\n\nconst ProjectCard = props => {\n  return (\n    <div className='project-card-slideshow'>\n      <div className='project-slide'>\n        <div className='project-slide-image'>\n          <img src={require(`../assests/${props.slideInfo.picture}`)} alt='' />\n        </div>\n        <div className='project-slide-info'>\n          <h2>{props.slideInfo.title}</h2>\n          <p>{props.slideInfo.description}</p>\n        </div>\n      </div>\n      <div className='project-card-slideshow-nav'>\n        <button onClick={() => props.change('prev')}>&lt;</button>\n        <div id='slideId'>{`${props.slideInfo.index + 1}/${\n          props.totalSlides\n        }`}</div>\n        <button onClick={() => props.change('next')}>></button>\n      </div>\n    </div>\n  )\n}\nexport default ProjectCard\n","const data = {\n  locs: {\n    title: 'LOCS',\n    description: 'Large Order Consolidation Solution',\n    tools: 'Frontend - HTML, CSS, Vanilla Javascript. Backend - PHP ',\n    totalSlides: 4,\n    slides: [\n      {\n        index: 0,\n        picture: 'locs_1.png',\n        title: 'Step 1',\n        description:\n          'Enter the staging number that will be placed on each individual pallet in the order. Enter/Scan the Order number found on the picking ticket. Choose the name of the user, then press \"Begin\"'\n      },\n      {\n        index: 1,\n        picture: 'locs_2.png',\n        title: 'Step 2',\n        description:\n          'With the cursor autofocused in the item entry field, begin scanning each part on the completed pallet. Once a pallet is completed, press the \"+\" button to lock in the current pallet, and to add another one if necessary. '\n      },\n      {\n        index: 2,\n        picture: 'locs_3.png',\n        title: 'Step 3',\n        description:\n          'Repeat the process in step 2 for additional pallets. When all pallets are completed and locked in, press the \"Review\" button to generate the final report with.'\n      },\n      {\n        index: 3,\n        picture: 'locs_4.png',\n        title: 'Step 4',\n        description:\n          'Print out the generated report and compare it to the packing list to ensure accuracy. If a dicrepency is found it will be pin-pointed to an exact pallet and item.'\n      }\n    ]\n  }\n}\nexport default data\n","import React, { Component } from 'react'\nimport './Page.css'\nimport ProjectCard from '../components/ProjectCard'\nimport data from '../data/data'\nimport './Dev.css'\n\nclass Dev extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      locsData: data.locs,\n      locsSlide: data.locs.slides[0],\n      slideIndex: data.locs.slides[0].index,\n      totalSlides: data.locs.totalSlides\n    }\n  }\n\n  onClickHandler = direction => {\n    switch (direction) {\n      case 'next':\n        if (this.state.slideIndex === this.state.totalSlides - 1) {\n          this.setState({\n            locsSlide: data.locs.slides[0],\n            slideIndex: 0\n          })\n        } else {\n          this.setState({\n            locsSlide: data.locs.slides[this.state.slideIndex + 1],\n            slideIndex: this.state.slideIndex + 1\n          })\n        }\n        break\n      case 'prev':\n        if (this.state.slideIndex === 0) {\n          this.setState({\n            locsSlide: data.locs.slides[this.state.locsData.totalSlides - 1],\n            slideIndex: this.state.locsData.totalSlides - 1\n          })\n        } else {\n          this.setState({\n            locsSlide: data.locs.slides[this.state.slideIndex - 1],\n            slideIndex: this.state.slideIndex - 1\n          })\n        }\n\n        break\n      default:\n        break\n    }\n  }\n\n  render () {\n    return (\n      <div className='container'>\n        <ProjectCard\n          slideInfo={this.state.locsSlide}\n          change={this.onClickHandler}\n          totalSlides={this.state.totalSlides}\n        ></ProjectCard>\n\n        <div className='content'>\n          <h1 className='content-title'>Locs</h1>\n          <hr />\n          <h3 className='content-subtitle'>\n            Large Order Consolidation Solution\n          </h3>\n          <h1 className='content-topic'>Purpose</h1>\n          <p className='content-topic-desc'>\n            To eliminate human error in, and simplify the pallet consolidation\n            portion of the fulfillment process for large distributor orders.\n          </p>\n          <h1 className='content-topic'>Overview</h1>\n          <p className='content-topic-desc'>\n            LOCS helps reduce the time it would normally take to resolve\n            possible discrepencies in the order fulfillment process, by keeping\n            a detailed record of the case qty and weight of each item pulled,\n            and which pallet they are on. This is done by grabbing necessary\n            info, including standard unit per case Quantities, and weights for\n            each part from a database containing such details. When comparing\n            the finished report LOCS generates upon completion of the\n            consolidation process, discrepencies, if any, are pin pointed to\n            exact parts on exact pallets allowing minimal time to be spent\n            resolving the issue.\n          </p>\n\n          <h1 className='content-topic'>Tools</h1>\n          <p className='content-topic-desc'>\n            Before I learned any type of front-end or back-end framework I built\n            LOCS using raw HTML, CSS, and vanilla javascript for the front end,\n            php and MySQL on the back-end.\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Dev\n","import React from 'react'\nimport './App.css'\nimport { HashRouter, Route, Link } from 'react-router-dom'\n\nimport Home from './Pages/Home'\n// import Recommendation from './Pages/Recommendation'\nimport Hobbies from './Pages/Hobbies'\n// import Locs from './Pages/Locs'\nimport Dev from './Pages/Dev'\n\nfunction App () {\n  return (\n    <HashRouter>\n      <div className='App'>\n        <ul className='nav'>\n          <li>\n            <Link to='/'>Home</Link>\n          </li>\n          <li>\n            <Link to='/Dev'>Dev</Link>\n          </li>\n          {/* <li>\n            <Link to='/Hobbies'>Hobbies</Link>\n          </li> */}\n        </ul>\n      </div>\n      <Route path='/' exact>\n        <Home></Home>\n      </Route>\n      <Route path='/Dev'>\n        <Dev></Dev>\n      </Route>\n      <Route path='/Hobbies'>\n        <Hobbies></Hobbies>\n      </Route>\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}